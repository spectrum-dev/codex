version: '3.8'

services:
    orchestration:
        build:
            context: ${ASSEMBLER_PROJECT_DIR:-..}/django-orchestration
        ports:
            - 8080:8000
        environment:
            - DATABASE_NAME=postgres
            - CELERY_BACKEND_DATABASE_NAME=celery-backend
            - DATABASE_USER=root
            - DATABASE_PASSWORD=password
            - DATABASE_HOST=postgres
            - DATABASE_PORT=5432
            - API_BASE_URL=http://block-monolith:8000
            - RABBIT_MQ_URL=amqp://guest:guest@rabbitmq:5672
        depends_on:
            - postgres
            - rabbitmq
        volumes:
            - ${ASSEMBLER_PROJECT_DIR:-..}/django-orchestration/:/usr/src/app/
        entrypoint: ''
        command: './docker-entrypoint.sh'
        networks:
            - default
    
    orchestration-worker:
        build:
            context: ${ASSEMBLER_PROJECT_DIR:-..}/django-orchestration
        environment:
            - DATABASE_NAME=postgres
            - CELERY_BACKEND_DATABASE_NAME=celery-backend
            - DATABASE_USER=root
            - DATABASE_PASSWORD=password
            - DATABASE_HOST=postgres
            - DATABASE_PORT=5432
            - API_BASE_URL=http://block-monolith:8000
            - RABBIT_MQ_URL=amqp://guest:guest@rabbitmq:5672
        depends_on:
            - postgres
            - rabbitmq
        volumes:
            - ${ASSEMBLER_PROJECT_DIR:-..}/django-orchestration/:/usr/src/app/
        entrypoint: ''
        command: 'celery -A orchestration worker -l DEBUG'
        networks:
            - default
    
    postgres:
        image: postgres:13.3
        healthcheck:
            test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "root" ]
            timeout: 45s
            interval: 10s
            retries: 10
        restart: always
        environment:
            - POSTGRES_USER=root
            - POSTGRES_PASSWORD=password
            - APP_DB_USER=docker
            - APP_DB_PASS=docker
            - APP_DB_NAME=orchestration
        volumes:
            - ./orchestration-db/01-init.sql:/docker-entrypoint-initdb.d/db.sql
            - ./postgres-data:/var/lib/postgresql/data
        ports:
            - 5432:5432
        networks:
            - default
    
    block-monolith:
        build:
            context: ${ASSEMBLER_PROJECT_DIR:-..}/django-block-monolith
        ports:
            - 8000:8000
        environment:
            - ALPHA_VANTAGE_API_KEY="TROTOWG20AM6Z39Z"
            - DJANGO_SECRET_KEY=django-public-secret-key
            - DJANGO_DEBUG="TRUE"
            - CELERY_BACKEND_DATABASE_NAME=celery-backend
            - DATABASE_USER=root
            - DATABASE_PASSWORD=password
            - DATABASE_HOST=postgres
            - DATABASE_PORT=5432
            - RABBIT_MQ_URL=amqp://guest:guest@rabbitmq:5672
        volumes:
            - ${ASSEMBLER_PROJECT_DIR:-..}/django-block-monolith/:/usr/src/app/
        depends_on:
            - rabbitmq
            - postgres
        entrypoint: ''
        command: './docker-entrypoint.sh'
        networks:
            - default
    
    block-monolith-worker:
        build:
            context: ${ASSEMBLER_PROJECT_DIR:-..}/django-block-monolith
        environment:
            - ALPHA_VANTAGE_API_KEY="TROTOWG20AM6Z39Z"
            - DJANGO_SECRET_KEY=django-public-secret-key
            - DJANGO_DEBUG="TRUE"
            - CELERY_BACKEND_DATABASE_NAME=celery-backend
            - DATABASE_USER=root
            - DATABASE_PASSWORD=password
            - DATABASE_HOST=postgres
            - DATABASE_PORT=5432
            - RABBIT_MQ_URL=amqp://guest:guest@rabbitmq:5672
        volumes:
            - ${ASSEMBLER_PROJECT_DIR:-..}/django-block-monolith/:/usr/src/app/
        depends_on:
            - rabbitmq
            - postgres
        entrypoint: ''
        command: 'celery -A blocks worker -Q blocks -l DEBUG'
        networks:
            - default
    
    flower:  
        image: mher/flower
        environment:
            - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672
            - FLOWER_PORT=8888
        depends_on:
            - rabbitmq
        ports:  
            - 8888:8888
        networks:
            - default

    rabbitmq:
        image: "rabbitmq:3-management"
        ports:
            - "15672:15672"
            - "5672:5672"
        labels:
            NAME: "rabbitmq"
        networks:
            - default